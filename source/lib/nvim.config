" source my customized config
source ~/.config/nvim/init.vim

set nonumber

"<1> filter according to visual selection
"First, yank the selected text, it will be yanked into register 0. Then save
"the file, surpressing any errors (primarily when using this macro in a filter
"result, which is opened as read-only). Finally, executing a shell command
"which is created by concatenating the name of the helper file with the
"contents of the register 0.
:vmap <C-s> y:silent!:w<CR>:exec ":silent !TIMELINE_INSTALL_DIR/lib/timeline/filter-in-terminal-tab --file ".shellescape(expand("%:p"),1) shellescape(@0,1)<CR>
":vmap <C-s> y:exec ":silent !.code/filter-in-terminal-tab ".shellescape(@0,1)<CR>

"<1> filter according to current word
:nmap <C-s> viw<C-s>

"<2> silently save the file, ask user about the filter term and use it as in <1>
:map <expr> <C-q> ":silent!:w<CR>:silent !TIMELINE_INSTALL_DIR/lib/timeline/filter-in-terminal-tab --file ".shellescape(expand("%:p"),1)." ".shellescape(input("Filter: "),1)."<CR>"
":map <expr> <C-q> ":silent!:w<CR>:silent !.code/filter-in-terminal-tab ".shellescape(input("Filter: "),1)."<CR>"

"<3> run link.py with absolute file name and cursor position as arguments
":map <C-z> :exec ":!.code/link.py \"".expand("%:p")."\"" line(".") col(".")<CR><CR>
:map <C-z> :exec ":!TIMELINE_INSTALL_DIR/lib/timeline/link.py ".shellescape(expand("%:p"),1) line(".") col(".")<CR><CR>

"<4> silently save the file and run list.py with absolute file name and current
"line number as arguments
:map <C-l> :silent!:w<CR>:exec ":!TIMELINE_INSTALL_DIR/lib/timeline/list.py ".shellescape(expand("%:p"),1) line(".")<CR>

"<5> run list.py with absolute file name and current line number as arguments
"and with --only-date flag. Put the result at the cursor position.
:map <C-D> :silent!:w<CR>:exec ":r!TIMELINE_INSTALL_DIR/lib/timeline/list.py --generate-date" shellescape(expand("%:p"),1) line(".")<CR>

